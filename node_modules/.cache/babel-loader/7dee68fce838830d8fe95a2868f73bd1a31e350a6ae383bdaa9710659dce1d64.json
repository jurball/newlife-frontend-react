{"ast":null,"code":"//let s = await postData('http://127.0.0.1:8000/authorization', auth)\nexport async function postData(url, data) {\n  try {\n    const post = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await post.json();\n    return json;\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport function normalizeData(obj) {\n  return {\n    ...obj\n  };\n}\nexport async function testAuth() {\n  let auth = {\n    email: \"admin@admin.ru\",\n    password: \"Qa1\"\n  };\n  const data = await fetch(\"http://127.0.0.1:8000/authorization\", {\n    method: \"POST\",\n    body: JSON.stringify(auth),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const json = await data.json();\n  return json;\n}\n\n// function exampleFetch() {\n//     let auth = {\n//         email: \"admin@admin.ru\",\n//         password: \"Qa1\"\n//     }\n//     fetch(\"http://127.0.0.1:8000/authorization\", {\n//         method: \"POST\",\n//         body: JSON.stringify(auth),\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }).\n//     then(data => { return data.json() })\n//         .then(my => {console.log(my)})\n// }","map":{"version":3,"names":["postData","url","data","post","fetch","method","body","JSON","stringify","headers","json","e","console","log","normalizeData","obj","testAuth","auth","email","password"],"sources":["/home/user/Документы/GitHub/react-practic/src/API/api-fetch.js"],"sourcesContent":["\n//let s = await postData('http://127.0.0.1:8000/authorization', auth)\nexport async function postData(url, data) {\n\n    try {\n        const post = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        const json = await post.json();\n\n        return json;\n    } catch(e) {\n        console.log(e);\n    }\n\n\n\n}\n\nexport function normalizeData(obj) {\n    return {\n        ...obj\n    }\n}\n\nexport async function testAuth() {\n    let auth = {\n        email: \"admin@admin.ru\",\n        password: \"Qa1\"\n    }\n\n    const data = await fetch(\"http://127.0.0.1:8000/authorization\", {\n        method: \"POST\",\n        body: JSON.stringify(auth),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n\n    const json = await data.json();\n\n    return json;\n}\n\n// function exampleFetch() {\n//     let auth = {\n//         email: \"admin@admin.ru\",\n//         password: \"Qa1\"\n//     }\n//     fetch(\"http://127.0.0.1:8000/authorization\", {\n//         method: \"POST\",\n//         body: JSON.stringify(auth),\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }).\n//     then(data => { return data.json() })\n//         .then(my => {console.log(my)})\n// }"],"mappings":"AACA;AACA,OAAO,eAAeA,QAAQA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAEtC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAC1BI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;MAC1BO,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMP,IAAI,CAACO,IAAI,CAAC,CAAC;IAE9B,OAAOA,IAAI;EACf,CAAC,CAAC,OAAMC,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB;AAIJ;AAEA,OAAO,SAASG,aAAaA,CAACC,GAAG,EAAE;EAC/B,OAAO;IACH,GAAGA;EACP,CAAC;AACL;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC7B,IAAIC,IAAI,GAAG;IACPC,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE;EACd,CAAC;EAED,MAAMjB,IAAI,GAAG,MAAME,KAAK,CAAC,qCAAqC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACS,IAAI,CAAC;IAC1BR,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMR,IAAI,CAACQ,IAAI,CAAC,CAAC;EAE9B,OAAOA,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}